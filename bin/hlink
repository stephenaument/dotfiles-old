#!/usr/bin/env ruby
require 'fileutils'
require File.expand_path("../git_configuration_handler", __FILE__)

EXCLUDES = %w(bin custom . .. .git README.md .gitconfig.local)

def cwd
  @cwd ||= File.expand_path(File.dirname(__FILE__))
end

def root
  File.dirname(cwd)
end

def home
  @home ||= File.expand_path('~')
end

def destination(file,sub_directory)
  File.join(*[home, sub_directory, File.basename(file)].compact)
end

def install(file,sub_directory=nil)
  file = File.expand_path(file)
  if system("ln -nsf #{file} #{destination(file,sub_directory)}")
    print "successfully installed "
  else
    print "failed to install "
  end
  puts (file.split('/') - root.split('/')).join('/')
end

def uninstall(file,sub_directory=nil)
  file = destination(File.expand_path(file),sub_directory)
  return puts "no file at #{file}" unless File.exist?(file)
  if File.symlink?(file)
    File.unlink(file)
    puts "removed symlink at #{file}"
  else
    puts "could not remove non-symlink at #{file}"
  end
end

def directories_at(location)
  entries = (Dir.entries(location) - EXCLUDES)
  expanded_entries = entries.map{|f| File.join(location,f) }
  expanded_entries.select { |file| File.directory?(file) }
end

def uninstall?
  ARGV.include?('-u')
end

if ARGV.include?('-h')
  script = File.basename(__FILE__)
  puts %[
  "#{script}" symlinks the files in dotmatrix into your home directory.
  options:
      -h  Get this help
      -u  Remove symlinks to files in dotmatrix
  ]
  exit 0
end

# install all the dotfiles
(Dir.entries(root) - EXCLUDES).each do |file|
  next if file =~ /~$/
  uninstall? ? uninstall(file) : install(file)
end

# install the hr convenience wrapper
FileUtils.mkdir_p(File.join(home,'bin'))
install('bin/hr')

# install the custom directory path configs
directories_at(File.join(root,'custom')).each do |custom|
  Dir.glob(File.join(custom,'**','**')).select{|f| File.file?(f) }.each do |file|
    # The following is pretty gross. I'm sorry.
    dest_dir = File.dirname(file).split('/').drop_while{|f| f != 'custom'}.drop(1).join('/')
    FileUtils.mkdir_p(File.join(home,dest_dir))
    install(file,dest_dir)
  end
end

# install a .gitconfig.local if Git version
# is compatible and file not already present
GitConfigurationHandler.new(@home)
